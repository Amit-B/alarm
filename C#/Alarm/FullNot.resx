<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAEBARAGBzEFBkEFBUEFBUEFBj0BARgAAAIA
        AAAAAAAAAAIBARoICUQHCEAAABMAAAFTU1OFh4dSUlJXV1eLi4tfX19FRUVNTU0REREUFBRpaWlpaWlv
        b29NTU1YWFhdXV0UFBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAUAAAYAAAYAAAcAAAcAAAIAAAAAAAAAAAAAAAAAAAIAAAcAAAYAAAIAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAB
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAWFhYzMzMtLS0KCgoWFhYlJSUAAAArKyszMzMzMzMjIyMcHBwzMzMz
        MzMrKysFBQUAAAAyMjJYWFgtLS0AAAAAAAAjIyMzMzMzMzMzMzMzMzMzMzMHBwcTExNnZ2dhYWEhISEz
        MzMzMzMoKCgeHh4zMzMzMzMUFBQAAAAhISEzMzMHBwcAAAAAAAAAAAAAAABycnL+/v7l5eUyMjKAgIDE
        xMQAAADY2Nj///////+ysrKLi4v////////Y2NgZGRkAAACzs7P///+goKAFBQUAAACysrL/////////
        //////////8lJSV0dHT////8/PzT09P////+/v7Ly8uYmJj///////9lZWUPDw/ExMT///8lJSUAAAAA
        AAAAAAAAAABycnL////l5eUzMzOwsLDb29seHh7Y2Nj////+/v6ysrKLi4v+/v7+/v7Y2NgZGRkdHR3a
        2tr+/v7Pz88bGxsAAACysrL////////+/v7////+/v4zMzPNzc3////v7+/v7+/////+/v7Ly8uZmZn+
        /v7///9lZWVaWlr19fX+/v4lJSUAAAAAAAAAAAAAAABycnL////l5eUzMzPW1tbm5uY1NTXY2Nj+/v7/
        //+ysrKBgYH5+fn////Pz88WFhZGRkbv7+/////09PQzMzMAAACdnZ3+/v7///++vr5tbW3d3d1PT0/h
        4eH+/v5/f39ZWVn///////+8vLyJiYn////+/v5nZ2e/v7/////5+fkhISEAAAAAAAAAAAAAAAAtLS3/
        //+/v78UFBT39/f29vZUVFSEhIT39/f///91dXUyMjLW1tb///+RkZEEBARubm79/f3Q0ND///9gYGAA
        AABISEju7u7////d3d00NDSOjo5BQUHf39////9RUVEzMzP////+/v5RUVEeHh7///////+Xl5f7+/v/
        //+0tLQHBwcAAAAAAAAAAAAAAAAAAAD///+lpaUtLS3///////91dXVMTEzy8vL+/v5MTEwZGRnLy8v/
        //9/f38AAACurq7///+Tk5PNzc2hoaEAAAADAwOpqan////+/v6KiooAAAALCwvCwsL///+rq6uJiYn/
        ///+/v4yMjIAAAD+/v7////i4uL+/v7v7+9HR0cAAAAAAAAAAAAAAAAAAAAAAAD///+lpaVQUFD/////
        //+goKBMTEzy8vL///9MTEwZGRnLy8v///9/f38DAwPo6Oj8/PxmZmaXl5fPz88PDw8AAABAQEDx8fH/
        ///c3NwoKCgAAABSUlLm5ubu7u7f39////////8yMjIAAAD///////+EhITz8/PW1tYTExMAAAAAAAAA
        AAAAAAAAAAAAAAD///+lpaV4eHj+/v7////Nzc1MTEzy8vL///9MTEwZGRnLy8v///9/f38pKSn////u
        7u5ERERlZWXi4uI1NTUaGhoYGBirq6v////8/PyDg4MAAAAHBwc9PT1JSUlXV1f///////8yMjIAAAD/
        //////9lZWWXl5fu7u5EREQAAAAAAAAAAAAAAAAAAAAAAAD///+pqamgoKD+/v7+/v75+flQUFDy8vL+
        /v5MTExwcHD39/f///+JiYmjo6P////7+/uenp6ioqL7+/uioqKysrJoaGhKSkr+/v7////z8/MZGRk7
        OztaWloAAABoaGj////t7e0qKioAAAD+/v7///9lZWVWVlbr6+vFxcUPDw8AAAAAAAAAAAAAAAAAAAD/
        //+2tra5ubn+/v7///////9ycnLy8vL///9MTEx/f3////////+Li4uysrL///////+ysrKysrL///+y
        srKysrLm5uba2tr////////+/v4+Pj7Ly8v5+fmOjo7S0tL////Z2dkgICAAAAD///////9mZmbFxcX7
        +/v///8lJSUAAAAAAAAAAAAAAAAAAAD////CwsLT09P+/v7c3Nz///+ampry8vL///9MTEx/f3/+/v7/
        //+MjIyysrL///////+ysrKysrL///+ysrKysrL////////////////+/v4oKCiZmZn/////////////
        //+WlpYHBwcAAAD///////9mZmbY2Nj///////8lJSUAAAAAAAAAAAAAAAAAAAD+/v7Q0NDv7+////+W
        lpbw8PDKysry8vL+/v5MTExMTEyYmJiYmJhTU1NqamqYmJiYmJhra2tra2uYmJhqampqamqYmJiYmJiY
        mJiYmJiZmZkWFhYPDw+BgYGysrKurq6JiYkFBQUAAAAAAAD+/v7///9lZWWBgYGYmJiYmJgWFhYAAAAA
        AAAAAAAAAABMTEz////r6+v////8/PxbW1vS0tLs7Oz29vb///9/f38HBwcZGRkpKSkGBgYAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMMDAwKCgoBAQEAAAAAAAAXFxf+
        /v7///9lZWUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZmZn////////////q6uo3Nze3t7f/////////
        //+ysrIgICCxsbHr6+s7OzsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAACJiYn+/v7///9lZWUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACYmJj/
        ///////+/v7GxsYWFhaRkZH+/v7+/v7+/v6ysrI3Nzfv7+////9xcXEAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZmZn+/v7///9lZWUAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAACRkZHy8vLx8fHy8vKoqKgLCwtra2vy8vLy8vLy8vKpqakkJCTCwsL1
        9fVLS0sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAACRkZHy8vLy8vJgYGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtLS1MTExMTExMTEwtLS0A
        AAAWFhZMTExMTExMTEw1NTUGBgYyMjJSUlIMDAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtLS1MTExMTEweHh4AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAODg4AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAuLi4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>